

@{
    ViewBag.Title = "location";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    hr {
        overflow: visible;
        height: 30px;
        border-style: solid;
        border-color: black;
        border-width: 1px 0 0 0;
        border-radius: 20px;
    }
</style>
<script src="https://maps.googleapis.com/maps/api/js?libraries=places&key=AIzaSyA_Rdwh2aZXUZWIdr-5FBQHQAOWKiem3GY"></script>



<br />
<br />
<table >
    <tr>
    
        <td><h2 style="text-align:right"><b>رؤيتنـا:</b>  </h2></td>

<td><h2 style="color:#104f78">توفير بيئة آمنه و سعيدة لأطفال طالبات ومنسوبات الجامعة,يسعى المركز جاهدا للتميز في نهجه للتعليم الذي يؤثر على الحياة اليومية للأطفال داخله </h2></td></tr>


    <tr>
     
        <td><h2><b>الرســالة:</b></h2></td>
        <td><h2 style="color:#104f78">
               -تقديم برامج تعلمية عالية المستوى
                <br /> 
               -تطوير الخدمات المقدمة من المركز
            <br />
               -تهيئة بيئة مناسبة للإنتاج والتميز
            
             </h2></td>
    </tr>
</table>
<tr>

    <h2 style="text-align:center">مواقع روضة سنابل طيبة</h2>

    <div id="map_canvas" style="height: 550px;"></div>

    <script type="text/javascript">

    @*<!-- This code tells the browser to execute the "Initialize" method only when the complete document model has been loaded. -->*@
        $(document).ready(function () {
            Initialize();
        });

        // Where all the fun happens
        function Initialize() {

            // Google has tweaked their interface somewhat - this tells the api to use that new UI
            google.maps.visualRefresh = true;
            var Tunisie = new google.maps.LatLng(24.491365, 39.552247);

            // These are options that set initial zoom level, where the map is centered globally to start, and the type of map to show
            var mapOptions = {
                zoom: 14,
                center: Tunisie,
                mapTypeId: google.maps.MapTypeId.G_NORMAL_MAP
            };

            // This makes the div with id "map_canvas" a google map
            var map = new google.maps.Map(document.getElementById("map_canvas"), mapOptions);

            // a sample list of JSON encoded data of places to visit in Tunisia
            // you can either make up a JSON list server side, or call it from a controller using JSONResult
            var data = [
            { "Id": 1, "PlaceName": "الفرع الرئيسي", "GeoLong": "24.490185", "GeoLat": "39.552247" },
        { "Id": 2, "PlaceName": "فرع التربية", "GeoLong": "24.491365", "GeoLat": "39.552140" },
        { "Id": 3, "PlaceName": "فرع العلوم", "GeoLong": "24.481025", "GeoLat": "39.547473" },
            ];

            // Using the JQuery "each" selector to iterate through the JSON list and drop marker pins
            $.each(data, function (i, item) {
                var marker = new google.maps.Marker({
                    'position': new google.maps.LatLng(item.GeoLong, item.GeoLat),
                    'map': map,
                    'title': item.PlaceName
                });

                // Make the marker-pin blue!
                marker.setIcon('http://maps.google.com/mapfiles/ms/icons/blue-dot.png')

                // put in some information about each json object - in this case, the opening hours.
                var infowindow = new google.maps.InfoWindow({
                    content: "<div class='infoDiv'><h2>" + item.PlaceName + "</div></div>"
                });

                // finally hook up an "OnClick" listener to the map so it pops up out info-window when the marker-pin is clicked!
                google.maps.event.addListener(marker, 'click', function () {
                    infowindow.open(map, marker);
                });

            })
        }


    </script>

